{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/auth/ForgetPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport { Alert, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next'; // hooks\n\nimport { useForgotPassword } from '../../hooks/auth'; // components\n\nimport { VerticalForm, FormInput } from '../../components/form';\nimport AuthLayout from './AuthLayout';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ForgetPassword = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [resetPasswordSuccess, error, passwordReset, forgotPassword] = useForgotPassword();\n  /*\n  form validation schema\n  */\n\n  const schemaResolver = yupResolver(yup.object().shape({\n    email: yup.string().required(t('Please enter Email')).email(t('Please enter valid Email'))\n  }));\n  /*\n  handle form submission\n  */\n\n  const onSubmit = formData => {\n    forgotPassword({\n      email: formData['email']\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    bottomLinks: /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted\",\n      children: [t('Back to'), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/auth/login\",\n        className: \"text-primary fw-semibold ms-1\",\n        children: t('Log In')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"h5 mb-0 mt-3\",\n      children: t('Reset Password')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted mt-1 mb-4\",\n      children: t(\"Enter your email address and we'll send you an email with instructions to reset your password.\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), error && !passwordReset && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      className: \"mb-3\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this), resetPasswordSuccess && passwordReset && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"success\",\n      className: \"mb-3\",\n      children: resetPasswordSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n      onSubmit: onSubmit,\n      resolver: schemaResolver,\n      defaultValues: {},\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        label: t('Email'),\n        placeholder: t('Email'),\n        containerClass: 'mb-3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-0 text-center  pt-3 d-grid\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: t('Submit')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ForgetPassword, \"UM0a5QoGN4beJtkXQ63/F1OTPGE=\", false, function () {\n  return [useTranslation, useForgotPassword];\n});\n\n_c = ForgetPassword;\nexport default ForgetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/auth/ForgetPassword.tsx"],"names":["Link","Alert","Button","yup","yupResolver","useTranslation","useForgotPassword","VerticalForm","FormInput","AuthLayout","ForgetPassword","t","resetPasswordSuccess","error","passwordReset","forgotPassword","schemaResolver","object","shape","email","string","required","onSubmit","formData"],"mappings":"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","sourcesContent":["import { Link } from 'react-router-dom';\nimport { Alert, Button } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useTranslation } from 'react-i18next';\n\n// hooks\nimport { useForgotPassword } from '../../hooks/auth';\n\n// components\nimport { VerticalForm, FormInput } from '../../components/form';\n\nimport AuthLayout from './AuthLayout';\n\ntype UserData = {\n    email: string;\n};\n\nconst ForgetPassword = () => {\n    const { t } = useTranslation();\n\n    const [resetPasswordSuccess, error, passwordReset, forgotPassword] = useForgotPassword();\n\n    /*\n    form validation schema\n    */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            email: yup.string().required(t('Please enter Email')).email(t('Please enter valid Email')),\n        })\n    );\n\n    /*\n    handle form submission\n    */\n    const onSubmit = (formData: UserData) => {\n        forgotPassword!({ email: formData['email'] });\n    };\n\n    return (\n        <AuthLayout\n            bottomLinks={\n                <p className=\"text-muted\">\n                    {t('Back to')}\n                    <Link to=\"/auth/login\" className=\"text-primary fw-semibold ms-1\">\n                        {t('Log In')}\n                    </Link>\n                </p>\n            }\n        >\n            <h6 className=\"h5 mb-0 mt-3\">{t('Reset Password')}</h6>\n            <p className=\"text-muted mt-1 mb-4\">\n                {t(\"Enter your email address and we'll send you an email with instructions to reset your password.\")}\n            </p>\n\n            {error && !passwordReset && (\n                <Alert variant=\"danger\" className=\"mb-3\">\n                    {error}\n                </Alert>\n            )}\n            {resetPasswordSuccess && passwordReset && (\n                <Alert variant=\"success\" className=\"mb-3\">\n                    {resetPasswordSuccess}\n                </Alert>\n            )}\n\n            <VerticalForm<UserData> onSubmit={onSubmit} resolver={schemaResolver} defaultValues={{}}>\n                <FormInput\n                    type=\"email\"\n                    name=\"email\"\n                    label={t('Email')}\n                    placeholder={t('Email')}\n                    containerClass={'mb-3'}\n                />\n                <div className=\"mb-0 text-center  pt-3 d-grid\">\n                    <Button type=\"submit\">{t('Submit')}</Button>\n                </div>\n            </VerticalForm>\n        </AuthLayout>\n    );\n};\n\nexport default ForgetPassword;\n"]},"metadata":{},"sourceType":"module"}