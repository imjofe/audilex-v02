{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/docs/Custom/Gallery/ImageGallery1.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap'; // component\n\nimport { LightBox } from 'components/LightBox'; // dummy data\n\nimport { gallery } from '../data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ImageGallery1 = () => {\n  _s();\n\n  const galleryImages = (gallery || []).map(album => {\n    return album.image;\n  });\n  const [isOpen, setIsOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0); // handle lightbox event\n\n  const openLightbox = index => {\n    setPhotoIndex(index);\n    setIsOpen(true);\n  };\n\n  const closeLightbox = () => {\n    setIsOpen(false);\n  };\n\n  const moveNext = () => {\n    setPhotoIndex(prevState => (prevState + 1) % galleryImages.length);\n  };\n\n  const movePrev = () => {\n    setPhotoIndex(prevState => (prevState + galleryImages.length - 1) % galleryImages.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      as: \"h5\",\n      className: \"mb-0\",\n      children: \"Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"sub-header\",\n      children: \"A flexible lightbox component for displaying images in a React project.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Simple Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"filterable-content position-relative\",\n      children: (gallery || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          sm: 6,\n          xl: 4,\n          className: \"filter-item  all web illustrator\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gal-box\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"image-popup\",\n              title: item.image.caption,\n              onClick: () => openLightbox(index),\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.image.src,\n                alt: \"\",\n                className: \"img-fluid rounded-sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(LightBox, {\n      images: galleryImages,\n      photoIndex: photoIndex,\n      closeLightbox: closeLightbox,\n      moveNext: moveNext,\n      movePrev: movePrev\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImageGallery1, \"oBFvfXg6OOBJZ2FnzIVvtFR3WGc=\");\n\n_c = ImageGallery1;\nexport default ImageGallery1;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageGallery1\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/docs/Custom/Gallery/ImageGallery1.tsx"],"names":["useState","Link","Card","Col","Row","LightBox","gallery","ImageGallery1","galleryImages","map","album","image","isOpen","setIsOpen","photoIndex","setPhotoIndex","openLightbox","index","closeLightbox","moveNext","prevState","length","movePrev","item","caption","src","toString"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Col, Row } from 'react-bootstrap';\n\n// component\nimport { LightBox } from 'components/LightBox';\n\n// dummy data\nimport { gallery } from '../data';\n\nconst ImageGallery1 = () => {\n    const galleryImages = (gallery || []).map((album) => {\n        return album.image;\n    });\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [photoIndex, setPhotoIndex] = useState<number>(0);\n\n    // handle lightbox event\n    const openLightbox = (index: number) => {\n        setPhotoIndex(index);\n        setIsOpen(true);\n    };\n\n    const closeLightbox = () => {\n        setIsOpen(false);\n    };\n\n    const moveNext = () => {\n        setPhotoIndex((prevState) => (prevState + 1) % galleryImages.length);\n    };\n\n    const movePrev = () => {\n        setPhotoIndex((prevState) => (prevState + galleryImages.length - 1) % galleryImages.length);\n    };\n\n    return (\n        <>\n            <Card.Title as=\"h5\" className=\"mb-0\">\n                Gallery\n            </Card.Title>\n            <p className=\"sub-header\">A flexible lightbox component for displaying images in a React project.</p>\n\n            <h5>Simple Example</h5>\n            <Row className=\"filterable-content position-relative\">\n                {(gallery || []).map((item, index) => {\n                    return (\n                        <Col sm={6} xl={4} key={index.toString()} className=\"filter-item  all web illustrator\">\n                            <div className=\"gal-box\">\n                                <Link\n                                    to=\"#\"\n                                    className=\"image-popup\"\n                                    title={item.image!.caption}\n                                    onClick={() => openLightbox(index)}\n                                >\n                                    <img src={item.image!.src} alt=\"\" className=\"img-fluid rounded-sm\" />\n                                </Link>\n                            </div>\n                        </Col>\n                    );\n                })}\n            </Row>\n\n            {/* image lightbox */}\n            {isOpen && (\n                <LightBox\n                    images={galleryImages}\n                    photoIndex={photoIndex}\n                    closeLightbox={closeLightbox}\n                    moveNext={moveNext}\n                    movePrev={movePrev}\n                />\n            )}\n        </>\n    );\n};\n\nexport default ImageGallery1;\n"]},"metadata":{},"sourceType":"module"}