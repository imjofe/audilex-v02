{"ast":null,"code":"function ___$insertStyle(css) {\n  if (!css) {\n    return;\n  }\n\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = css;\n  document.head.appendChild(style);\n  return css;\n}\n\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\n\n___$insertStyle(\"@keyframes blink {\\n  50% {\\n    opacity: 1;\\n  }\\n}\");\n\nvar Typer = function (_a) {\n  var sentences = _a.sentences,\n      _b = _a.startDelay,\n      startDelay = _b === void 0 ? 0 : _b,\n      _c = _a.cursorDelay,\n      cursorDelay = _c === void 0 ? startDelay : _c,\n      _d = _a.className,\n      className = _d === void 0 ? '' : _d,\n      _e = _a.cursorClassName,\n      cursorClassName = _e === void 0 ? '' : _e,\n      _f = _a.cursorColor,\n      cursorColor = _f === void 0 ? '' : _f,\n      _g = _a.cursorBlinkSpeed,\n      cursorBlinkSpeed = _g === void 0 ? 700 : _g,\n      _h = _a.showCursor,\n      showCursor = _h === void 0 ? true : _h,\n      _j = _a.hideCursorOnFinish,\n      hideCursorOnFinish = _j === void 0 ? false : _j,\n      _k = _a.cursorSmooth,\n      cursorSmooth = _k === void 0 ? false : _k,\n      _l = _a.typingSpeed,\n      typingSpeed = _l === void 0 ? 80 : _l,\n      _m = _a.deletingSpeed,\n      deletingSpeed = _m === void 0 ? 30 : _m,\n      _o = _a.pauseTime,\n      pauseTime = _o === void 0 ? 1000 : _o,\n      _p = _a.loop,\n      loop = _p === void 0 ? true : _p,\n      _q = _a.style,\n      style = _q === void 0 ? {} : _q;\n\n  var _r = useState(''),\n      text = _r[0],\n      setText = _r[1];\n\n  var _s = useState(false),\n      isDeleting = _s[0],\n      setIsDeleting = _s[1];\n\n  var _t = useState(0),\n      loopNum = _t[0],\n      setLoopNum = _t[1];\n\n  var _u = useState(typingSpeed),\n      writingSpeed = _u[0],\n      setWritingSpeed = _u[1];\n\n  var mountedRef = useRef(false);\n  var refText = useRef(text);\n  var refIsDeleting = useRef(isDeleting);\n  var refLoopNum = useRef(loopNum);\n  var refWritingSpeed = useRef(writingSpeed);\n  var refTimer = useRef(0);\n  var timer1 = useRef(0);\n  var timer2 = useRef(0);\n  var timer3 = useRef(0);\n  var refIsGoingToDelete = useRef(false);\n  var refIsFinished = useRef(false);\n  clearTimeout(refTimer.current);\n  refText.current = text;\n  refIsDeleting.current = isDeleting;\n  refLoopNum.current = loopNum;\n  refWritingSpeed.current = writingSpeed;\n  useEffect(function () {\n    mountedRef.current = true;\n    return function () {\n      mountedRef.current = false;\n      clearTimeout(refTimer.current);\n      clearTimeout(timer1.current);\n      clearTimeout(timer2.current);\n      clearTimeout(timer3.current);\n    };\n  }, []);\n  var handleType = useCallback(function () {\n    var i = refLoopNum.current % sentences.length;\n    var fullText = sentences[i];\n    setText(refIsDeleting.current ? fullText.substring(0, refText.current.length - 1) : fullText.substring(0, refText.current.length + 1));\n\n    if (!refIsDeleting.current && refText.current === fullText && !refIsGoingToDelete.current) {\n      refIsGoingToDelete.current = true;\n      timer1.current = setTimeout(function () {\n        setIsDeleting(true);\n        setWritingSpeed(deletingSpeed);\n        refIsGoingToDelete.current = false;\n      }, pauseTime);\n    } else if (refIsDeleting.current && refText.current === '') {\n      setIsDeleting(false);\n      setWritingSpeed(typingSpeed);\n      setLoopNum(refLoopNum.current + 1);\n    }\n\n    if (loop || i !== sentences.length - 1 || refText.current.length !== fullText.length) {\n      if (refIsGoingToDelete.current) {\n        timer2.current = setTimeout(function () {\n          refTimer.current = setTimeout(handleType, refWritingSpeed.current);\n        }, pauseTime);\n      } else {\n        refTimer.current = setTimeout(handleType, refWritingSpeed.current);\n      }\n    } else {\n      refIsFinished.current = true;\n    }\n  }, [deletingSpeed, loop, pauseTime, typingSpeed, sentences]);\n  useEffect(function () {\n    timer3.current = setTimeout(function () {\n      if (!mountedRef.current) {\n        return;\n      }\n\n      handleType();\n    }, startDelay);\n  }, [handleType, startDelay]);\n  var styledSpan = useMemo(function () {\n    return {\n      opacity: 0,\n      visibility: showCursor ? 'visible' : 'hidden',\n      color: cursorColor,\n      animation: \"blink \" + cursorBlinkSpeed + \"ms \" + (cursorSmooth ? '' : 'steps(1)') + \" infinite\",\n      animationDelay: cursorDelay + \"ms\"\n    };\n  }, [cursorBlinkSpeed, cursorColor, cursorDelay, cursorSmooth, showCursor]);\n  return React.createElement(\"span\", {\n    style: style\n  }, React.createElement(\"span\", {\n    className: className\n  }, text), !(refIsFinished.current && hideCursorOnFinish) && React.createElement(\"span\", {\n    className: \"typist-cursor \" + (cursorClassName + \" \" + className),\n    style: styledSpan\n  }, \"|\"));\n};\n\nexport default Typer;","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/node_modules/react-text-typist/src/index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useCallback, useMemo } from 'react';\n// import PropTypes from 'prop-types';\n\nimport './styles.scss';\n\ninterface TyperProps {\n  sentences: string[];\n  startDelay?: number;\n  cursorDelay?: number;\n  className?: string;\n  cursorClassName?: string;\n  cursorColor?: string;\n  cursorBlinkSpeed?: number;\n  showCursor?: boolean;\n  hideCursorOnFinish?: boolean;\n  cursorSmooth?: boolean;\n  typingSpeed?: number;\n  deletingSpeed?: number;\n  pauseTime?: number;\n  loop?: boolean;\n  style?: React.CSSProperties;\n}\n\nconst Typer: React.FC<TyperProps> = ({\n  sentences,\n  startDelay = 0,\n  cursorDelay = startDelay,\n  className = '',\n  cursorClassName = '',\n  cursorColor = '',\n  cursorBlinkSpeed = 700,\n  showCursor = true,\n  hideCursorOnFinish = false,\n  cursorSmooth = false,\n  typingSpeed = 80,\n  deletingSpeed = 30,\n  pauseTime = 1000,\n  loop = true,\n  style = {},\n}: TyperProps) => {\n  const [text, setText] = useState('');\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [loopNum, setLoopNum] = useState(0);\n  const [writingSpeed, setWritingSpeed] = useState(typingSpeed);\n  const mountedRef = useRef(false);\n\n  const refText = useRef(text);\n  const refIsDeleting = useRef(isDeleting);\n  const refLoopNum = useRef(loopNum);\n  const refWritingSpeed = useRef(writingSpeed);\n\n  const refTimer = useRef(0);\n  const timer1 = useRef(0);\n  const timer2 = useRef(0);\n  const timer3 = useRef(0);\n  const refIsGoingToDelete = useRef(false);\n  const refIsFinished = useRef(false);\n\n  clearTimeout(refTimer.current);\n\n  refText.current = text;\n  refIsDeleting.current = isDeleting;\n  refLoopNum.current = loopNum;\n  refWritingSpeed.current = writingSpeed;\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    return () => {\n      mountedRef.current = false;\n      clearTimeout(refTimer.current);\n      clearTimeout(timer1.current);\n      clearTimeout(timer2.current);\n      clearTimeout(timer3.current);\n    };\n  }, []);\n\n  const handleType = useCallback(() => {\n    const i = refLoopNum.current % sentences.length;\n    const fullText = sentences[i];\n\n    setText(\n      refIsDeleting.current\n        ? fullText.substring(0, refText.current.length - 1)\n        : fullText.substring(0, refText.current.length + 1)\n    );\n\n    if (!refIsDeleting.current && refText.current === fullText && !refIsGoingToDelete.current) {\n      refIsGoingToDelete.current = true;\n      timer1.current = setTimeout(() => {\n        setIsDeleting(true);\n        setWritingSpeed(deletingSpeed);\n        refIsGoingToDelete.current = false;\n      }, pauseTime);\n    } else if (refIsDeleting.current && refText.current === '') {\n      setIsDeleting(false);\n      setWritingSpeed(typingSpeed);\n      setLoopNum(refLoopNum.current + 1);\n    }\n\n    if (loop || i !== sentences.length - 1 || refText.current.length !== fullText.length) {\n      if (refIsGoingToDelete.current) {\n        timer2.current = setTimeout(() => {\n          refTimer.current = setTimeout(handleType, refWritingSpeed.current);\n        }, pauseTime);\n      } else {\n        refTimer.current = setTimeout(handleType, refWritingSpeed.current);\n      }\n    } else {\n      refIsFinished.current = true;\n    }\n  }, [deletingSpeed, loop, pauseTime, typingSpeed, sentences]);\n\n  useEffect(() => {\n    timer3.current = setTimeout(() => {\n      if (!mountedRef.current) {\n        return;\n      }\n      handleType();\n    }, startDelay);\n  }, [handleType, startDelay]);\n\n  const styledSpan = useMemo(\n    () => ({\n        opacity: 0,\n        visibility: showCursor ? 'visible' : 'hidden',\n        color: cursorColor,\n        animation: `blink ${cursorBlinkSpeed}ms ${cursorSmooth ? '' : 'steps(1)'} infinite`,\n        animationDelay: `${cursorDelay}ms`,\n      } as React.CSSProperties),\n      [cursorBlinkSpeed, cursorColor, cursorDelay, cursorSmooth, showCursor]\n  );\n\n  return (\n    <span style={style}>\n      <span className={className}>{text}</span>\n      {!(refIsFinished.current && hideCursorOnFinish) && (\n        <span\n          className={`typist-cursor ${`${cursorClassName} ${className}`}`}\n          style={styledSpan}\n        >\n          |\n        </span>\n      )}\n    </span>\n  );\n};\n\n/* Typer.propTypes = {\n  className: PropTypes.string, // so it is compatible with styled-components\n  cursorColor: PropTypes.string,\n  sentences: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  showCursor: PropTypes.bool,\n  typingSpeed: PropTypes.number,\n  deleteSpeed: PropTypes.number,\n  pauseTime: PropTypes.number,\n  loop: PropTypes.bool,\n};\n\nTyper.defaultProps = {\n  className: '',\n  cursorColor: '#000000',\n  showCursor: true,\n  typingSpeed: 80,\n  deleteSpeed: 30,\n  pauseTime: 2000,\n  loop: true,\n}; */\n\nexport default Typer;\n"]},"metadata":{},"sourceType":"module"}