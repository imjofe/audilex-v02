{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Progressbars.tsx\";\nimport { Card, ProgressBar } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Progressbars = () => {\n  return /*#__PURE__*/_jsxDEV(Card, {\n    id: \"progressbars\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h5\",\n        className: \"mb-0\",\n        children: \"Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"Bootstrap custom progress bars featuring support for stacked bars, animated backgrounds, and text labels\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 0,\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 33,\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 66,\n          variant: \"success\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 100,\n          variant: \"danger\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 25,\n          variant: \"info\",\n          label: \"25%\",\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: [\"Uses a gradient to create a striped effect, and Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"animated\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 73\n        }, this), \" prop to animate the stripes right to left.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          now: 10,\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          animated: true,\n          now: 75,\n          className: \"mb-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: [\"We can set a \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"height\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 34\n        }, this), \" value on the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 67\n        }, this), \". The inner\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".progress-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this), \" will automatically resize accordingly.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 25,\n          className: \"mb-3\",\n          style: {\n            height: '2px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          now: 25,\n          className: \"mb-3\",\n          style: {\n            height: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Progressbars;\nexport default Progressbars;\n\nvar _c;\n\n$RefreshReg$(_c, \"Progressbars\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Progressbars.tsx"],"names":["Card","ProgressBar","Progressbars","height"],"mappings":";AAAA,SAASA,IAAT,EAAeC,WAAf,QAAkC,iBAAlC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACvB,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,cAAT;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,IAAf;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,CAAlB;AAAqB,UAAA,SAAS,EAAC;AAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,EAAlB;AAAsB,UAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,EAAlB;AAAsB,UAAA,OAAO,EAAC,SAA9B;AAAwC,UAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,GAAlB;AAAuB,UAAA,OAAO,EAAC,QAA/B;AAAwC,UAAA,SAAS,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,gBAJJ,eAKI,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,EAAlB;AAAsB,UAAA,OAAO,EAAC,MAA9B;AAAqC,UAAA,KAAK,EAAC,KAA3C;AAAiD,UAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAiBI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,wFACwD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADxD;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAsBI;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,OAAO,MAApB;AAAqB,UAAA,GAAG,EAAE,EAA1B;AAA8B,UAAA,SAAS,EAAC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,QAAQ,MAArB;AAAsB,UAAA,GAAG,EAAE,EAA3B;AAA+B,UAAA,SAAS,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eA2BI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA,iDACiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADjB,iCACkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADlD,iBACoF,GADpF,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BJ,eAgCI;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,EAAlB;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAuC,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE;AAAV;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,WAAD;AAAa,UAAA,GAAG,EAAE,EAAlB;AAAsB,UAAA,SAAS,EAAC,MAAhC;AAAuC,UAAA,KAAK,EAAE;AAAEA,YAAAA,MAAM,EAAE;AAAV;AAA9C;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyCH,CA1CD;;KAAMD,Y;AA4CN,eAAeA,YAAf","sourcesContent":["import { Card, ProgressBar } from 'react-bootstrap';\n\nconst Progressbars = () => {\n    return (\n        <Card id=\"progressbars\">\n            <Card.Body>\n                <Card.Title as=\"h5\" className=\"mb-0\">\n                    Progress\n                </Card.Title>\n                <p className=\"sub-header\">\n                    Bootstrap custom progress bars featuring support for stacked bars, animated backgrounds, and text\n                    labels\n                </p>\n\n                <div>\n                    <ProgressBar now={0} className=\"mb-3\" />\n                    <ProgressBar now={33} className=\"mb-3\" />\n                    <ProgressBar now={66} variant=\"success\" className=\"mb-3\" />\n                    <ProgressBar now={100} variant=\"danger\" className=\"mb-3\" />\n                    <ProgressBar now={25} variant=\"info\" label=\"25%\" className=\"mb-3\" />\n                </div>\n\n                <p className=\"sub-header mt-4\">\n                    Uses a gradient to create a striped effect, and Add <code>animated</code> prop to animate the\n                    stripes right to left.\n                </p>\n\n                <div>\n                    <ProgressBar striped now={10} className=\"mb-3\" />\n                    <ProgressBar animated now={75} className=\"mb-3\" />\n                </div>\n\n                <p className=\"sub-header mt-4\">\n                    We can set a <code>height</code> value on the <code>.progress</code>. The inner{' '}\n                    <code>.progress-bar</code> will automatically resize accordingly.\n                </p>\n\n                <div>\n                    <ProgressBar now={25} className=\"mb-3\" style={{ height: '2px' }} />\n                    <ProgressBar now={25} className=\"mb-3\" style={{ height: '16px' }} />\n                </div>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Progressbars;\n"]},"metadata":{},"sourceType":"module"}