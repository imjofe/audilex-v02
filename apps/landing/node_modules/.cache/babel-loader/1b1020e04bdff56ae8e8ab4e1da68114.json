{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Badges.tsx\";\nimport { Badge, Button, Card } from 'react-bootstrap';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Badges = _ref => {\n  let {\n    variants\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    id: \"badges\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h5\",\n        className: \"mb-0\",\n        children: \"Badges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Badges scale to match the size of the immediate parent element by using relative font sizing and\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"em\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this), \" units.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Example heading \", /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 37\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Example heading \", /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 37\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Example heading \", /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Example heading \", /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 37\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [\"Example heading \", /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 37\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [\"Example heading \", /*#__PURE__*/_jsxDEV(Badge, {\n          bg: \"secondary\",\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 37\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: \"Badges can be used as part of links or buttons to provide a counter.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-primary\",\n        children: [\"Notifications\", /*#__PURE__*/_jsxDEV(Badge, {\n          className: \"ms-1\",\n          bg: \"light\",\n          text: \"dark\",\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: \"Add any of the below mentioned modifier classes to change the appearance of a badge.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), ([...variants, 'light'] || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          className: classNames('me-1', item === 'light' && 'text-dark'),\n          bg: item,\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: [\"badges Use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"pill\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 36\n        }, this), \" modifier class to make badges more rounded (with a larger border-radius).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"primary\",\n        pill: true,\n        children: \"Pill\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"primary\",\n        pill: true,\n        className: \"badge-md mx-1\",\n        children: \"Badge-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        bg: \"primary\",\n        pill: true,\n        className: \"badge-lg\",\n        children: \"Badge-lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-4\",\n        children: [\"Use the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".badge-soft-*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this), \" modifier class to make badges soft.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), (variants || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Badge, {\n          className: classNames('me-1', 'badge-soft-' + item),\n          bg: \"\",\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Badges;\nexport default Badges;\n\nvar _c;\n\n$RefreshReg$(_c, \"Badges\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Badges.tsx"],"names":["Badge","Button","Card","classNames","Badges","variants","map","item","index","charAt","toUpperCase","slice","toString"],"mappings":"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","sourcesContent":["import { Badge, Button, Card } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from '../types';\n\ntype BadgesProps = {\n    variants: Variant[];\n};\n\nconst Badges = ({ variants }: BadgesProps) => {\n    return (\n        <Card id=\"badges\">\n            <Card.Body>\n                <Card.Title as=\"h5\" className=\"mb-0\">\n                    Badges\n                </Card.Title>\n                <p className=\"sub-header\">\n                    Badges scale to match the size of the immediate parent element by using relative font sizing and{' '}\n                    <code>em</code> units.\n                </p>\n\n                <h1>\n                    Example heading <Badge bg=\"secondary\">New</Badge>{' '}\n                </h1>\n                <h2>\n                    Example heading <Badge bg=\"secondary\">New</Badge>{' '}\n                </h2>\n                <h3>\n                    Example heading <Badge bg=\"secondary\">New</Badge>{' '}\n                </h3>\n                <h4>\n                    Example heading <Badge bg=\"secondary\">New</Badge>{' '}\n                </h4>\n                <h5>\n                    Example heading <Badge bg=\"secondary\">New</Badge>{' '}\n                </h5>\n                <h6>\n                    Example heading <Badge bg=\"secondary\">New</Badge>{' '}\n                </h6>\n\n                <p className=\"mt-4\">Badges can be used as part of links or buttons to provide a counter.</p>\n\n                <Button className=\"btn-primary\">\n                    Notifications\n                    <Badge className=\"ms-1\" bg=\"light\" text=\"dark\">\n                        4\n                    </Badge>\n                </Button>\n\n                <p className=\"mt-4\">\n                    Add any of the below mentioned modifier classes to change the appearance of a badge.\n                </p>\n\n                {([...variants, 'light'] || []).map((item, index) => {\n                    return (\n                        <Badge\n                            key={index.toString()}\n                            className={classNames('me-1', item === 'light' && 'text-dark')}\n                            bg={item}\n                        >\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Badge>\n                    );\n                })}\n\n                <p className=\"mt-4\">\n                    badges Use the <code>pill</code> modifier class to make badges more rounded (with a larger\n                    border-radius).\n                </p>\n\n                <Badge bg=\"primary\" pill>\n                    Pill\n                </Badge>\n                <Badge bg=\"primary\" pill className=\"badge-md mx-1\">\n                    Badge-md\n                </Badge>\n                <Badge bg=\"primary\" pill className=\"badge-lg\">\n                    Badge-lg\n                </Badge>\n\n                <p className=\"mt-4\">\n                    Use the <code>.badge-soft-*</code> modifier class to make badges soft.\n                </p>\n\n                {(variants || []).map((item, index) => {\n                    return (\n                        <Badge key={index.toString()} className={classNames('me-1', 'badge-soft-' + item)} bg=\"\">\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Badge>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Badges;\n"]},"metadata":{},"sourceType":"module"}