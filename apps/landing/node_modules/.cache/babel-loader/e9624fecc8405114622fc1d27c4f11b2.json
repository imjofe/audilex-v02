{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/docs/Colors/Colors.tsx\";\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Colors = _ref => {\n  let {\n    variants\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h4\",\n        className: \"my-0\",\n        children: \"Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"sub-header\",\n        children: \"These are primary theme colors.They are used for all the elements including buttons, alerts, background, etc.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: (variants || []).map((color, index) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xl: 2,\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classNames('rounded', 'p-5', 'bg-' + color)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n              children: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 33\n            }, this)]\n          }, index.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Colors;\nexport default Colors;\n\nvar _c;\n\n$RefreshReg$(_c, \"Colors\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/docs/Colors/Colors.tsx"],"names":["Card","Col","Row","classNames","Colors","variants","map","color","index","toString"],"mappings":";AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;;;AAOA,MAAMC,MAAM,GAAG,QAA+B;AAAA,MAA9B;AAAEC,IAAAA;AAAF,GAA8B;AAC1C,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,IAAf;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAQI,QAAC,GAAD;AAAA,kBACK,CAACA,QAAQ,IAAI,EAAb,EAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,8BACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,EAAE,EAAE,CAAhB;AAAmB,YAAA,SAAS,EAAC,aAA7B;AAAA,oCACI;AAAK,cAAA,SAAS,EAAEL,UAAU,CAAC,SAAD,EAAY,KAAZ,EAAmB,QAAQI,KAA3B;AAA1B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAAgDC,KAAK,CAACC,QAAN,EAAhD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH,SAPA;AADL;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAxBD;;KAAML,M;AA0BN,eAAeA,MAAf","sourcesContent":["import { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from '../types';\n\ntype ColorsProps = {\n    variants: Variant[];\n};\n\nconst Colors = ({ variants }: ColorsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title as=\"h4\" className=\"my-0\">\n                    Colors\n                </Card.Title>\n                <Card.Text className=\"sub-header\">\n                    These are primary theme colors.They are used for all the elements including buttons, alerts,\n                    background, etc.\n                </Card.Text>\n                <Row>\n                    {(variants || []).map((color, index) => {\n                        return (\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\n                                <div className={classNames('rounded', 'p-5', 'bg-' + color)}></div>\n                                <h6>{color}</h6>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Colors;\n"]},"metadata":{},"sourceType":"module"}