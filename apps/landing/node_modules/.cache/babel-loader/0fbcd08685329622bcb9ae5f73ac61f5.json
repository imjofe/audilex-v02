{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Buttons.tsx\";\nimport { Button, Card } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buttons = _ref => {\n  let {\n    variants\n  } = _ref;\n  const buttonVariants1 = [...variants, 'link'];\n  const buttonVariants2 = [...variants, 'link', 'white'];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    id: \"buttons\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h5\",\n        className: \"mb-0\",\n        children: \"Buttons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: [\"Use any of the available button style types to quickly create a styled button. Just modify the\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"variant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this), \" prop.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), (buttonVariants1 || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item,\n          className: \"me-2 mb-2 mb-xxl-0\",\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: [\"For a lighter touch, Buttons also come in \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"outline-*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 63\n        }, this), \" variants with no background color.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), (buttonVariants2 || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item !== 'white' ? 'outline-' + item : item,\n          className: \"me-2 mb-2 mb-xxl-0\",\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: [\"Replace the default modifier classes with the \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".btn-soft-*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 67\n        }, this), \"ones to have a softer background color on any button.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), (buttonVariants1 || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: 'soft-' + item,\n          className: \"me-2 mb-2 mb-xl-0\",\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: [\"Add a class \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \".btn-rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }, this), \" with the default modifier classes to have rounded edges.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), (buttonVariants1 || []).map((item, index) => {\n        return /*#__PURE__*/_jsxDEV(Button, {\n          variant: item,\n          className: \"btn-rounded me-2 mb-2 mb-xl-0\",\n          children: item.charAt(0).toUpperCase() + item.slice(1)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: [\"Fancy larger or smaller buttons? Add \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"size=\\\"lg\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 58\n        }, this), \", \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"size=\\\"sm\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 82\n        }, this), \" for additional sizes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"lg\",\n        className: \"me-2 mb-2 mb-sm-0\",\n        children: \"Large button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"me-2 mb-2 mb-sm-0\",\n        children: \"Large button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        size: \"sm\",\n        className: \"me-2 mb-2 mb-sm-0\",\n        children: \"Large button\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: \"Buttons with icon - variations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"me-2 mb-2 mb-sm-0\",\n        children: [/*#__PURE__*/_jsxDEV(FeatherIcon, {\n          icon: \"play\",\n          className: \"me-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), \"Button with icon on left\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"me-2 mb-2 mb-sm-0\",\n        children: [\"Button with icon on right\", /*#__PURE__*/_jsxDEV(FeatherIcon, {\n          icon: \"play\",\n          className: \"ms-1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"me-2 mb-2 mb-sm-0 btn-icon d-inline-flex\",\n        children: /*#__PURE__*/_jsxDEV(FeatherIcon, {\n          icon: \"play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        className: \"btn-rounded-circle btn-icon d-inline-flex\",\n        children: /*#__PURE__*/_jsxDEV(FeatherIcon, {\n          icon: \"play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Buttons;\nexport default Buttons;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buttons\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Buttons.tsx"],"names":["Button","Card","FeatherIcon","Buttons","variants","buttonVariants1","buttonVariants2","map","item","index","charAt","toUpperCase","slice","toString"],"mappings":"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","sourcesContent":["import { Button, Card } from 'react-bootstrap';\nimport FeatherIcon from 'feather-icons-react';\n\n// types\nimport { Variant } from '../types';\n\ntype ButtonsProps = {\n    variants: Variant[];\n};\n\ntype ButtonVariant = Variant | 'link' | 'white';\n\nconst Buttons = ({ variants }: ButtonsProps) => {\n    const buttonVariants1: ButtonVariant[] = [...variants, 'link'];\n    const buttonVariants2: ButtonVariant[] = [...variants, 'link', 'white'];\n\n    return (\n        <Card id=\"buttons\">\n            <Card.Body>\n                <Card.Title as=\"h5\" className=\"mb-0\">\n                    Buttons\n                </Card.Title>\n                <p className=\"sub-header\">\n                    Use any of the available button style types to quickly create a styled button. Just modify the{' '}\n                    <code>variant</code> prop.\n                </p>\n\n                {(buttonVariants1 || []).map((item, index) => {\n                    return (\n                        <Button variant={item} className=\"me-2 mb-2 mb-xxl-0\" key={index.toString()}>\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Button>\n                    );\n                })}\n\n                <p className=\"sub-header mt-4\">\n                    For a lighter touch, Buttons also come in <code>outline-*</code> variants with no background color.\n                </p>\n\n                {(buttonVariants2 || []).map((item, index) => {\n                    return (\n                        <Button\n                            variant={item !== 'white' ? 'outline-' + item : item}\n                            className=\"me-2 mb-2 mb-xxl-0\"\n                            key={index.toString()}\n                        >\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Button>\n                    );\n                })}\n\n                <p className=\"sub-header mt-4\">\n                    Replace the default modifier classes with the <code>.btn-soft-*</code>\n                    ones to have a softer background color on any button.\n                </p>\n\n                {(buttonVariants1 || []).map((item, index) => {\n                    return (\n                        <Button variant={'soft-' + item} className=\"me-2 mb-2 mb-xl-0\" key={index.toString()}>\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Button>\n                    );\n                })}\n\n                <p className=\"sub-header mt-4\">\n                    Add a class <code>.btn-rounded</code> with the default modifier classes to have rounded edges.\n                </p>\n\n                {(buttonVariants1 || []).map((item, index) => {\n                    return (\n                        <Button variant={item} className=\"btn-rounded me-2 mb-2 mb-xl-0\" key={index.toString()}>\n                            {item!.charAt(0).toUpperCase() + item!.slice(1)}\n                        </Button>\n                    );\n                })}\n\n                <p className=\"sub-header mt-4\">\n                    Fancy larger or smaller buttons? Add <code>size=\"lg\"</code>, <code>size=\"sm\"</code> for additional\n                    sizes.\n                </p>\n\n                <Button variant=\"primary\" size=\"lg\" className=\"me-2 mb-2 mb-sm-0\">\n                    Large button\n                </Button>\n                <Button variant=\"primary\" className=\"me-2 mb-2 mb-sm-0\">\n                    Large button\n                </Button>\n                <Button variant=\"primary\" size=\"sm\" className=\"me-2 mb-2 mb-sm-0\">\n                    Large button\n                </Button>\n\n                <p className=\"sub-header mt-4\">Buttons with icon - variations</p>\n\n                <Button variant=\"primary\" className=\"me-2 mb-2 mb-sm-0\">\n                    <FeatherIcon icon=\"play\" className=\"me-1\" />\n                    Button with icon on left\n                </Button>\n                <Button variant=\"primary\" className=\"me-2 mb-2 mb-sm-0\">\n                    Button with icon on right\n                    <FeatherIcon icon=\"play\" className=\"ms-1\" />\n                </Button>\n                <Button variant=\"primary\" className=\"me-2 mb-2 mb-sm-0 btn-icon d-inline-flex\">\n                    <FeatherIcon icon=\"play\" />\n                </Button>\n                <Button variant=\"primary\" className=\"btn-rounded-circle btn-icon d-inline-flex\">\n                    <FeatherIcon icon=\"play\" />\n                </Button>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Buttons;\n"]},"metadata":{},"sourceType":"module"}