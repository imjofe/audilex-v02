{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Spinners.tsx\";\nimport { Card, Spinner } from 'react-bootstrap'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Spinners = _ref => {\n  let {\n    variants\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    id: \"spinners\",\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h5\",\n        className: \"mb-0\",\n        children: \"Spinners\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header\",\n        children: \"Spinners can be used to show the loading state in your projects.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), (variants || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"border\",\n          className: \"m-2\",\n          variant: color,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"sub-header mt-4\",\n        children: \"If you don't fancy a border spinner, switch to the grow spinner. While it doesn't technically spin, it does repeatedly grow!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), (variants || []).map((color, index) => {\n        return /*#__PURE__*/_jsxDEV(Spinner, {\n          animation: \"grow\",\n          className: \"m-2\",\n          variant: color,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"visually-hidden\",\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)\n        }, index.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Spinners;\nexport default Spinners;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spinners\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/docs/Bootstrap/Spinners.tsx"],"names":["Card","Spinner","Spinners","variants","map","color","index","toString"],"mappings":";AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,iBAA9B,C,CAEA;;;;AAOA,MAAMC,QAAQ,GAAG,QAAiC;AAAA,MAAhC;AAAEC,IAAAA;AAAF,GAAgC;AAC9C,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,UAAT;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,IAAf;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,EAMK,CAACA,QAAQ,IAAI,EAAb,EAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,4BACI,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,QAAnB;AAAmD,UAAA,SAAS,EAAC,KAA7D;AAAmE,UAAA,OAAO,EAAED,KAA5E;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAAiCC,KAAK,CAACC,QAAN,EAAjC;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA,CANL,eAcI;AAAG,QAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,EAmBK,CAACJ,QAAQ,IAAI,EAAb,EAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,4BACI,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,MAAnB;AAAiD,UAAA,SAAS,EAAC,KAA3D;AAAiE,UAAA,OAAO,EAAED,KAA1E;AAAA,iCACI;AAAM,YAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,WAA+BC,KAAK,CAACC,QAAN,EAA/B;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA,CAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+BH,CAhCD;;KAAML,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import { Card, Spinner } from 'react-bootstrap';\n\n// types\nimport { Variant } from '../types';\n\ntype SpinnersProps = {\n    variants: Variant[];\n};\n\nconst Spinners = ({ variants }: SpinnersProps) => {\n    return (\n        <Card id=\"spinners\">\n            <Card.Body>\n                <Card.Title as=\"h5\" className=\"mb-0\">\n                    Spinners\n                </Card.Title>\n                <p className=\"sub-header\">Spinners can be used to show the loading state in your projects.</p>\n\n                {(variants || []).map((color, index) => {\n                    return (\n                        <Spinner animation=\"border\" key={index.toString()} className=\"m-2\" variant={color}>\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </Spinner>\n                    );\n                })}\n\n                <p className=\"sub-header mt-4\">\n                    If you don't fancy a border spinner, switch to the grow spinner. While it doesn't technically spin,\n                    it does repeatedly grow!\n                </p>\n\n                {(variants || []).map((color, index) => {\n                    return (\n                        <Spinner animation=\"grow\" key={index.toString()} className=\"m-2\" variant={color}>\n                            <span className=\"visually-hidden\">Loading...</span>\n                        </Spinner>\n                    );\n                })}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default Spinners;\n"]},"metadata":{},"sourceType":"module"}