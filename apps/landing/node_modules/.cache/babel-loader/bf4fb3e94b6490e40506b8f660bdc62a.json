{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/other/account/Settings/ResetPassword.tsx\";\nimport { Button, Col, Row } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; // components\n\nimport { FormInput, VerticalForm } from 'components/form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ResetPassword = () => {\n  /*\n  form validation schema\n  */\n  const schemaResolver = yupResolver(yup.object().shape({\n    current_password: yup.string().required('Please enter Current Password'),\n    new_password: yup.string().required('Please enter New Password').min(6, 'Your password must be longer than 6 characters.'),\n    confirm_password: yup.string().oneOf([yup.ref('new_password'), null], 'Passwords must match').required('Please enter Confirm Password')\n  }));\n  /*\n      handle form submission\n      */\n\n  const onSubmit = () => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mt-3 mt-lg-0\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(VerticalForm, {\n      onSubmit: onSubmit,\n      resolver: schemaResolver,\n      formClass: \"password-form mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        label: 'Current Password',\n        type: \"password\",\n        name: \"current_password\",\n        containerClass: 'mb-3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: 'New Password',\n        type: \"password\",\n        name: \"new_password\",\n        containerClass: 'mb-3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        label: 'Confirm Password',\n        type: \"password\",\n        name: \"confirm_password\",\n        containerClass: 'mb-3'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"my-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 12,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Update Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/other/account/Settings/ResetPassword.tsx"],"names":["Button","Col","Row","yup","yupResolver","FormInput","VerticalForm","ResetPassword","schemaResolver","object","shape","current_password","string","required","new_password","min","confirm_password","oneOf","ref","onSubmit"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,GAAjB,EAAsBC,GAAtB,QAAiC,iBAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,iBAAxC;;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AACxB;AACJ;AACA;AACI,QAAMC,cAAc,GAAGJ,WAAW,CAC9BD,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AACfC,IAAAA,gBAAgB,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb,CAAsB,+BAAtB,CADH;AAEfC,IAAAA,YAAY,EAAEX,GAAG,CACZS,MADS,GAETC,QAFS,CAEA,2BAFA,EAGTE,GAHS,CAGL,CAHK,EAGF,iDAHE,CAFC;AAMfC,IAAAA,gBAAgB,EAAEb,GAAG,CAChBS,MADa,GAEbK,KAFa,CAEP,CAACd,GAAG,CAACe,GAAJ,CAAQ,cAAR,CAAD,EAA0B,IAA1B,CAFO,EAE0B,sBAF1B,EAGbL,QAHa,CAGJ,+BAHI;AANH,GAAnB,CAD8B,CAAlC;AAcA;AACJ;AACA;;AACI,QAAMM,QAAQ,GAAG,MAAM,CAAG,CAA1B;;AAEA,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAc,MAAA,QAAQ,EAAEA,QAAxB;AAAkC,MAAA,QAAQ,EAAEX,cAA5C;AAA4D,MAAA,SAAS,EAAC,oBAAtE;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,kBAAlB;AAAsC,QAAA,IAAI,EAAC,UAA3C;AAAsD,QAAA,IAAI,EAAC,kBAA3D;AAA8E,QAAA,cAAc,EAAE;AAA9F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,cAAlB;AAAkC,QAAA,IAAI,EAAC,UAAvC;AAAkD,QAAA,IAAI,EAAC,cAAvD;AAAsE,QAAA,cAAc,EAAE;AAAtF;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,SAAD;AAAW,QAAA,KAAK,EAAE,kBAAlB;AAAsC,QAAA,IAAI,EAAC,UAA3C;AAAsD,QAAA,IAAI,EAAC,kBAA3D;AAA8E,QAAA,cAAc,EAAE;AAA9F;AAAA;AAAA;AAAA;AAAA,cAHJ,eAKI;AAAI,QAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,cALJ,eAOI,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACI,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA,iCACI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,kBADJ;AAkBH,CAzCD;;KAAMD,a;AA2CN,eAAeA,aAAf","sourcesContent":["import { Button, Col, Row } from 'react-bootstrap';\nimport * as yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\n\n// components\nimport { FormInput, VerticalForm } from 'components/form';\n\nconst ResetPassword = () => {\n    /*\n    form validation schema\n    */\n    const schemaResolver = yupResolver(\n        yup.object().shape({\n            current_password: yup.string().required('Please enter Current Password'),\n            new_password: yup\n                .string()\n                .required('Please enter New Password')\n                .min(6, 'Your password must be longer than 6 characters.'),\n            confirm_password: yup\n                .string()\n                .oneOf([yup.ref('new_password'), null], 'Passwords must match')\n                .required('Please enter Confirm Password'),\n        })\n    );\n\n    /*\n        handle form submission\n        */\n    const onSubmit = () => { };\n\n    return (\n        <>\n            <h4 className=\"mt-3 mt-lg-0\">Password</h4>\n            <VerticalForm onSubmit={onSubmit} resolver={schemaResolver} formClass=\"password-form mt-4\">\n                <FormInput label={'Current Password'} type=\"password\" name=\"current_password\" containerClass={'mb-3'} />\n                <FormInput label={'New Password'} type=\"password\" name=\"new_password\" containerClass={'mb-3'} />\n                <FormInput label={'Confirm Password'} type=\"password\" name=\"confirm_password\" containerClass={'mb-3'} />\n\n                <hr className=\"my-4\" />\n\n                <Row className=\"mt-3\">\n                    <Col lg={12}>\n                        <Button type=\"submit\">Update Password</Button>\n                    </Col>\n                </Row>\n            </VerticalForm>\n        </>\n    );\n};\n\nexport default ResetPassword;\n"]},"metadata":{},"sourceType":"module"}