{"ast":null,"code":"var _jsxFileName = \"/workspaces/audilex-v02/apps/landing/src/pages/docs/Colors/TextColors.tsx\";\nimport { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames'; // types\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextColors = _ref => {\n  let {\n    variants\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        as: \"h4\",\n        className: \"my-0\",\n        children: \"Text Colors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"sub-header\",\n        children: [\"Even your text can have the contexual color. E.g.\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [\".text-\", '{', \"primary | secondary | success | danger | info | warning\", '}']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: (variants || []).map((color, index) => {\n          return /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            xl: 2,\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white rounded p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: classNames('text-' + color),\n              children: [\".text-\", color]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 33\n            }, this)]\n          }, index.toString(), true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TextColors;\nexport default TextColors;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextColors\");","map":{"version":3,"sources":["/workspaces/audilex-v02/apps/landing/src/pages/docs/Colors/TextColors.tsx"],"names":["Card","Col","Row","classNames","TextColors","variants","map","color","index","toString"],"mappings":";AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB,C,CAEA;;;;AAOA,MAAMC,UAAU,GAAG,QAAmC;AAAA,MAAlC;AAAEC,IAAAA;AAAF,GAAkC;AAClD,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,EAAE,EAAC,IAAf;AAAoB,QAAA,SAAS,EAAC,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA,wEACsD,GADtD,eAEI;AAAA,+BACW,GADX,6DACuE,GADvE;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAUI,QAAC,GAAD;AAAA,kBACK,CAACA,QAAQ,IAAI,EAAb,EAAiBC,GAAjB,CAAqB,CAACC,KAAD,EAAQC,KAAR,KAAkB;AACpC,8BACI,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAY,YAAA,EAAE,EAAE,CAAhB;AAAmB,YAAA,SAAS,EAAC,aAA7B;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAI,cAAA,SAAS,EAAEL,UAAU,CAAC,UAAUI,KAAX,CAAzB;AAAA,mCAAmDA,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAAgDC,KAAK,CAACC,QAAN,EAAhD;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH,SAPA;AADL;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA1BD;;KAAML,U;AA4BN,eAAeA,UAAf","sourcesContent":["import { Card, Col, Row } from 'react-bootstrap';\nimport classNames from 'classnames';\n\n// types\nimport { Variant } from '../types';\n\ntype TextColorsProps = {\n    variants: Variant[];\n};\n\nconst TextColors = ({ variants }: TextColorsProps) => {\n    return (\n        <Card>\n            <Card.Body>\n                <Card.Title as=\"h4\" className=\"my-0\">\n                    Text Colors\n                </Card.Title>\n                <Card.Text className=\"sub-header\">\n                    Even your text can have the contexual color. E.g.{' '}\n                    <code>\n                        .text-{'{'}primary | secondary | success | danger | info | warning{'}'}\n                    </code>\n                </Card.Text>\n                <Row>\n                    {(variants || []).map((color, index) => {\n                        return (\n                            <Col md={4} xl={2} className=\"text-center\" key={index.toString()}>\n                                <div className=\"bg-white rounded p-2\"></div>\n                                <h5 className={classNames('text-' + color)}>.text-{color}</h5>\n                            </Col>\n                        );\n                    })}\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default TextColors;\n"]},"metadata":{},"sourceType":"module"}